apiVersion: v1
kind: ConfigMap
metadata:
  name: halyard-frontend
data:
    frontend-nginx-config: |

      upstream halyard-headless{
        # requests from the public facing app to the SOCKETS server are routed here.
        server halyard-headless:8080;
      }

      server {
          listen       80;
          server_name  localhost;

          #charset koi8-r;
          #access_log  /var/log/nginx/host.access.log  main;

          location ^~ /headless {
            proxy_pass http://halyard-headless;
          }

          location / {
              root   /usr/share/nginx/html;
              index  index.html index.htm;
          }

          error_page   500 502 503 504  /50x.html;
          location = /50x.html {
              root   /usr/share/nginx/html;
          }
      }
---

apiVersion: apps/v1

kind: Deployment

metadata:
  name: halyard-frontend
  labels:
    app: halyard
    component: frontend

spec:
  replicas: 1
  selector:
    matchLabels:
      app: halyard
      component: frontend

  template:
    metadata:
      labels:
        app: halyard
        component: frontend
    spec:
      containers:
        - name: halyard-frontend
          image: robblovell/halyard-frontend:1.6
          imagePullPolicy: Always
          env:
            - name: HALYARD_API_HOST
              value: halyard-backend
            - name: HALYARD_API_PORT
              value: '3000'
            - name: HALYARD_SOCKETS_HOST
              value: halyard-sockets
            - name: HALYARD_SOCKETS_PORT
              value: '8999'
          ports:
            - containerPort: 80
          volumeMounts:
            - name: halyard-frontend-volume
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: frontend-nginx-config
      volumes:
      - name: halyard-frontend-volume
        configMap:
          name: halyard-frontend
